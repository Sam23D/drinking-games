var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$globalModel = {deck: _user$project$Carts$allCards, currentShowedCard: _elm_lang$core$Maybe$Nothing};
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$globalModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$DrawCard = {ctor: 'DrawCard'};
var _user$project$Main$Shuffled = function (a) {
	return {ctor: 'Shuffled', _0: a};
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Nada':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'DrawCard':
				var _p1 = _user$project$Carts$drawCard_(model.deck);
				var card = _p1._0;
				var remaining = _p1._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{currentShowedCard: card, deck: remaining}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Shuffle':
				var shuffled = A2(
					_elm_lang$core$Debug$log,
					'shuffled: ',
					_user$project$Carts$suffleDeck(model.deck));
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(_elm_lang$core$Random$generate, _user$project$Main$Shuffled, shuffled)
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{deck: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$Shuffle = {ctor: 'Shuffle'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$p,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						A2(
							_elm_lang$core$Basics_ops['++'],
							'Current: ',
							_elm_lang$core$Basics$toString(model.currentShowedCard))),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$DrawCard),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Draw'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$Shuffle),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Shuffle'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$p,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									A2(
										_elm_lang$core$Basics_ops['++'],
										'Remaining: ',
										_elm_lang$core$Basics$toString(model.deck))),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, subscriptions: _user$project$Main$subscriptions, update: _user$project$Main$update})();
var _user$project$Main$Nada = {ctor: 'Nada'};
