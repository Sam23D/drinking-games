var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _user$project$GUI$mainView(model),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Nada':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'DrawCard':
				var _p1 = _user$project$Cards$drawCard_(model.deck);
				var card = _p1._0;
				var remaining = _p1._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{currentShowedCard: card, deck: remaining}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Shuffle':
				var shuffled = A2(
					_elm_lang$core$Debug$log,
					'shuffled: ',
					_user$project$Cards$shuffleDeck(model.deck));
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(_elm_lang$core$Random$generate, _user$project$Actions$Shuffled, shuffled)
				};
			case 'Shuffled':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{deck: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{menuDisplay: !model.menuDisplay}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$globalModel = {deck: _user$project$Cards$allCards, currentShowedCard: _elm_lang$core$Maybe$Nothing, menuDisplay: false, ruleSet: _user$project$KingsCup$kingsCupRuleSet};
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: _user$project$Main$globalModel,
	_1: A2(
		_elm_lang$core$Random$generate,
		_user$project$Actions$Shuffled,
		_user$project$Cards$shuffleDeck(_user$project$Main$globalModel.deck))
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, subscriptions: _user$project$Main$subscriptions, update: _user$project$Main$update})();
